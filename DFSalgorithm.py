import time

# Создадим матрицу смежности для создания математической модели графа.
# В матрице каждый элемент - это вершина графа, к нему добавлен список, в котором 1 и 0 указывает,
# с какими вершинами имеется связь (1), с какими - нет (0).
# False означает, что данная вершина не была пройдена.
# В проекте есть фотография, в котором визуализрован данный граф.

mathGraph = {1: [[0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], False],
             2: [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0], False],
             3: [[0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], False],
             4: [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], False],
             5: [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], False],
             6: [[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], False],
             7: [[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], False],
             8: [[1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], False],
             9: [[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], False],
             10: [[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], False],
             11: [[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], False],
             12: [[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], False]}


#  Функция, выводящая граф в нужном нам виде.
def printGraph(graph):
    for string in graph:
        print(graph.get(string))
    print()


# Реализация функции, которая будет обходить граф в глубину.
def dfsResolver(key):
    time.sleep(1)  # задержка, чтобы было в консоли было поочередно видно, как проходит алгоритм вершины графа
    mathGraph.get(key)[1] = True
    printGraph(mathGraph)  # вывод графа в консоль
    count = 1  # индекс вершины, которая анализируется относительно текущей вершины
    for index in mathGraph.get(key)[0]:  # просматриваем все вершины относительно текущей
        if (mathGraph.get(count)[1] is False) and index != 0:  # если вершина связана с текущей и еще не была пройдена
            dfsResolver(count)  # то применяем функцию обхода для нее (то есть проходим граф рекурсивно)
        count += 1


# Запускаем алгоритм обхода с нужной нам вершины в качестве параметра.
dfsResolver(1)
print("Done!")
